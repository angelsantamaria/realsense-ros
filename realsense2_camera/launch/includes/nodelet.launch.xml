<launch>
  <arg name="external_manager"    default="false"/>
  <arg name="manager"             default="realsense2_camera_manager"/>
  <arg name="required"            default="false"/>
  <!--arg name="rosbag_filename"     default="/home/asantamaria/code/ros/t265_ws/src/realsense-ros/test_3t265_2020-04-02-15-12-30.bag"/-->

<!--   <arg name="serial_no"           default=""/>
  <arg name="usb_port_id"         default=""/>
  <arg name="device_type"         default=""/>
  <arg name="tf_prefix"           default=""/>
  <arg name="json_file_path"      default=""/>

  <arg name="fisheye_width"       default="0"/>
  <arg name="fisheye_height"      default="0"/>
  <arg name="enable_fisheye"      default="true"/>
  <arg name="enable_fisheye1"     default="true"/>
  <arg name="enable_fisheye2"     default="true"/>

  <arg name="depth_width"         default="640"/>
  <arg name="depth_height"        default="480"/>
  <arg name="enable_depth"        default="true"/>

  <arg name="infra_width"         default="640"/>
  <arg name="infra_height"        default="480"/>
  <arg name="enable_infra1"       default="true"/>
  <arg name="enable_infra2"       default="true"/>

  <arg name="color_width"         default="640"/>
  <arg name="color_height"        default="480"/>
  <arg name="enable_color"        default="true"/>

  <arg name="fisheye_fps"         default="30"/>
  <arg name="depth_fps"           default="30"/>
  <arg name="infra_fps"           default="30"/>
  <arg name="color_fps"           default="30"/>
  <arg name="gyro_fps"            default="0"/>
  <arg name="accel_fps"           default="0"/>
  <arg name="enable_gyro"         default="true"/>
  <arg name="enable_accel"        default="true"/>

  <arg name="enable_pointcloud"   default="false"/>
  <arg name="pointcloud_texture_stream" default="RS2_STREAM_COLOR"/>  --> <!-- use RS2_STREAM_ANY to avoid using texture -->
<!--   <arg name="pointcloud_texture_index"  default="0"/>

  <arg name="enable_sync"         default="false"/>
  <arg name="align_depth"         default="false"/>

  <arg name="base_frame_id"             default="$(arg tf_prefix)_link"/>
  <arg name="depth_frame_id"            default="$(arg tf_prefix)_depth_frame"/>
  <arg name="infra1_frame_id"           default="$(arg tf_prefix)_infra1_frame"/>
  <arg name="infra2_frame_id"           default="$(arg tf_prefix)_infra2_frame"/>
  <arg name="color_frame_id"            default="$(arg tf_prefix)_color_frame"/>
  <arg name="fisheye_frame_id"          default="$(arg tf_prefix)_fisheye_frame"/>
  <arg name="fisheye1_frame_id"         default="$(arg tf_prefix)_fisheye1_frame"/>
  <arg name="fisheye2_frame_id"         default="$(arg tf_prefix)_fisheye2_frame"/>
  <arg name="accel_frame_id"            default="$(arg tf_prefix)_accel_frame"/>
  <arg name="gyro_frame_id"             default="$(arg tf_prefix)_gyro_frame"/>
  <arg name="pose_frame_id"             default="$(arg tf_prefix)_pose_frame"/>

  <arg name="depth_optical_frame_id"    default="$(arg tf_prefix)_depth_optical_frame"/>
  <arg name="infra1_optical_frame_id"   default="$(arg tf_prefix)_infra1_optical_frame"/>
  <arg name="infra2_optical_frame_id"   default="$(arg tf_prefix)_infra2_optical_frame"/>
  <arg name="color_optical_frame_id"    default="$(arg tf_prefix)_color_optical_frame"/>
  <arg name="fisheye_optical_frame_id"  default="$(arg tf_prefix)_fisheye_optical_frame"/>
  <arg name="fisheye1_optical_frame_id" default="$(arg tf_prefix)_fisheye1_optical_frame"/>
  <arg name="fisheye2_optical_frame_id" default="$(arg tf_prefix)_fisheye2_optical_frame"/>
  <arg name="accel_optical_frame_id"    default="$(arg tf_prefix)_accel_optical_frame"/>
  <arg name="gyro_optical_frame_id"     default="$(arg tf_prefix)_gyro_optical_frame"/>
  <arg name="imu_optical_frame_id"      default="$(arg tf_prefix)_imu_optical_frame"/>
  <arg name="pose_optical_frame_id"     default="$(arg tf_prefix)_pose_optical_frame"/>

  <arg name="aligned_depth_to_color_frame_id"    default="$(arg tf_prefix)_aligned_depth_to_color_frame"/>
  <arg name="aligned_depth_to_infra1_frame_id"   default="$(arg tf_prefix)_aligned_depth_to_infra1_frame"/>
  <arg name="aligned_depth_to_infra2_frame_id"   default="$(arg tf_prefix)_aligned_depth_to_infra2_frame"/>
  <arg name="aligned_depth_to_fisheye_frame_id"  default="$(arg tf_prefix)_aligned_depth_to_fisheye_frame"/>
  <arg name="aligned_depth_to_fisheye1_frame_id" default="$(arg tf_prefix)_aligned_depth_to_fisheye1_frame"/>
  <arg name="aligned_depth_to_fisheye2_frame_id" default="$(arg tf_prefix)_aligned_depth_to_fisheye2_frame"/>

  <arg name="publish_tf"               default="true"/>
  <arg name="tf_publish_rate"          default="0"/>  --><!-- 0 - static transform -->

<!--   <arg name="odom_frame_id"            default="$(arg tf_prefix)_odom_frame"/>
  <arg name="topic_odom_in"            default="$(arg tf_prefix)/odom_in"/>
  <arg name="calib_odom_file"          default=""/>
  <arg name="publish_odom_tf"          default="true"/>
  <arg name="filters"                  default=""/>
  <arg name="clip_distance"            default="-1"/>
  <arg name="linear_accel_cov"         default="0.01"/>
  <arg name="initial_reset"            default="false"/>
  <arg name="unite_imu_method"         default="none"/>  --><!-- Options are: [none, copy, linear_interpolation] -->
  <!-- <arg name="allow_no_texture_points"  default="false"/> -->

  <!-- To delete -->
<!--   <arg name="cam0_name"        default="camera_front"/>
  <arg name="cam0_params_yaml" default="$(find realsense2_camera)/launch/params/default_t265.yaml"/>

  <arg name="cam1_name" default="camera_right"/>
  <arg name="cam1_params_yaml" default="$(find realsense2_camera)/launch/params/default_t265.yaml"/>

  <arg name="cam2_name" default="camera_left"/>
  <arg name="cam2_params_yaml" default="$(find realsense2_camera)/launch/params/default_t265.yaml"/>
 -->
  <node unless="$(arg external_manager)" pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen" required="$(arg required)"/>
  <node pkg="nodelet" type="nodelet" name="realsense2_camera" args="load realsense2_camera/RealSenseNodeFactory $(arg manager)" required="$(arg required)">
<!--     <param name="cam0/name"                    type="str"  value="$(arg cam0_name)"/>
    <param name="$(arg cam0_name)/serial_no"   type="str"  value="909212111154"/>
    <rosparam command="load" ns="$(arg cam0_name)" file="$(arg cam0_params_yaml)"/>

    <param name="cam1/name"                    type="str"  value="$(arg cam1_name)"/>
    <param name="$(arg cam1_name)/serial_no"   type="str"  value="845412111005"/>
    <rosparam command="load" ns="$(arg cam1_name)" file="$(arg cam1_params_yaml)"/>

    <param name="cam2/name"                    type="str"  value="$(arg cam2_name)"/>
    <param name="$(arg cam2_name)/serial_no"   type="str"  value="908412111064"/>
    <rosparam command="load" ns="$(arg cam2_name)" file="$(arg cam2_params_yaml)"/> -->
  </node>
</launch>
